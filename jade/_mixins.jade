//- Create a CSS element
mixin css(file, media)
  - media = media || 'all'
  link(type="text/css", rel="stylesheet", media="#{media}", href="#{file}.css")


//- Create a Script element
mixin js(file)
  script(type="text/javascript", src="#{file}")


//- Create a kitten image
//- Use 1 for color, 0 for B&W
mixin kitten(width, height, color, classes)
  - classes = classes || ''

  if color
    span.photo
      img(src="http://placekitten.com/#{width}/#{height}", alt="Here's a cute kitten.", title="Here's a cute kitten.", class="#{classes}")
  else
    span.photo
      img(src="http://placekitten.com/g/#{width}/#{height}", alt="Here's a cute kitten.", title="Here's a cute kitten.", class="#{classes}")


//- Auto generate placeholder links
mixin links(num, href)
  - num = num || 3
  - href = href || '#'
  - i = 1

  ul
    while i <= num
      - title = 'Link ' + i
      +link(title, href)
      - i++

//- Create a single link for a list of links
mixin link(title, href)
  - href = href || '#'
  li: a(href="#{href}") #{title}


//- Create a list with a series of items
mixin list(num, type)
  - num = num || 3
  - type = type || 'ul'

  #{type}
    - for (i = 1; i <= num; i++) {
      li List Item #{i}
    - }


//- Insert a paragraph of text
mixin p
  p
    | Collaboratively build market-driven ROI after user friendly experiences.
    | Authoritatively impact multidisciplinary resources via bleeding-edge synergy.
    | Efficiently leverage other's standardized methods of empowerment through functionalized information.
    | Intrinsicly aggregate adaptive networks rather than multimedia based models.
    | Appropriately disintermediate client-centric expertise through impactful infomediaries.


//- Create a series of checkboxes
mixin checks(num, grp)
  - num = num || 3
  - grp = grp || 'grp'
  - i = 1

  - for (i = 1; i <= num; i++) {
    - id = grp + '-' + i

    div.form-item.checkbox
      input(type='checkbox', name=id, id=id)
      label(for=id) Option #{i}
  - }
